name: Publish
description: |
  Publish Docker images to a registry. You need to be logged in at the registry
  for this action to perform with success.

inputs:
  registry:
    required: true
    description: |
      The root of the registry, including "username" to publish to, e.g.
      msyea (to default to the docker hub), docker.io/msyea to make
      DockerHub explicit, or ghcr.io/msyea.
  docker:
    required: false
    description: |
      The version of the Docker engine and rootless tools to use when
      building the images. Empty for latest (and tag will be short SHA)
  runner:
    required: false
    description: |
      The version of the GitHub runner to use when building the images.
      Empty for latest (and tag will be short SHA)
  latest:
    required: false
    default: "false"
    description: |
      When set to `true` this will arrange to make the GH actions runner image
      generated the latest one.

runs:
  using: composite
  steps:
    # Guess the versions to use out of the values of the inputs and store these
    # in the environment.
    # + DOCKER_VERSION will be the incoming semver, or the git short SHA
    #   (understood as latest, e.g. current official release at build time)
    # + RUNNER_VERSION will be the incoming semver, or "latest" (e.g. current
    #   official release at build time).
    # + TAG is the name of the GH Action image to generate, either the incoming
    #   semver, or the git short SHA.
    - name: Docker Version
      id: docker_version
      shell: bash
      run: |
        if [ -n "${{ inputs.docker }}" ]; then
          printf DOCKER_VERSION=%s\\n "${{ inputs.docker }}" >> "$GITHUB_ENV"
        else
          printf DOCKER_VERSION=%s\\n "$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
        fi
    - name: Runner Version
      id: runner_version
      shell: bash
      run: |
        if [ -n "${{ inputs.runner }}" ]; then
          printf TAG=%s\\n "${{ inputs.runner }}" >> "$GITHUB_ENV"
          printf RUNNER_VERSION=%s\\n "${{ inputs.runner }}" >> "$GITHUB_ENV"
        else
          printf TAG=%s\\n "$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
          printf RUNNER_VERSION=%s\\n "latest" >> "$GITHUB_ENV"
        fi

    # Setup multi-platform support for Docker build
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Build and Push the image to the remote registry, in turns.
    - name: Build/Push Docker to Registry
      id: docker
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.docker
        tags: ${{ inputs.registry }}/ubuntu-docker:${{ env.DOCKER_VERSION }}
        platforms: linux/amd64,linux/arm64
        build-args: |
          DOCKER_VERSION=${{ env.DOCKER_VERSION }}
        push: true
    - name: Build/Push DinD to Registry
      id: dind
      uses: docker/build-push-action@v2
      with:
        file: ./Dockerfile.dind
        tags: ${{ inputs.registry }}/ubuntu-dind:${{ env.DOCKER_VERSION }}
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          REGISTRY=${{ inputs.registry }}
          DOCKER_VERSION=${{ env.DOCKER_VERSION }}
    - name: Build/Push GH Actions Runner to Registry
      uses: docker/build-push-action@v2
      with:
        tags: ${{ inputs.registry }}/github-actions-runner:${{ env.TAG }}
        platforms: linux/amd64,linux/arm64
        push: true
        build-args: |
          REGISTRY=${{ inputs.registry }}
          DOCKER_VERSION=${{ env.DOCKER_VERSION }}
          GH_RUNNER_VERSION=${{ env.RUNNER_VERSION }}

    # Make the GH actions runner latest if necessary.
    - name: Make GH Actions Image latest
      shell: bash
      run: |
        docker image tag "${{ inputs.registry }}/github-actions-runner:${{ env.TAG }}" "${{ inputs.registry }}/github-actions-runner:latest"
        docker image push "${{ inputs.registry }}/github-actions-runner:latest"
