name: Follow GH Actions Runner and Docker Releases
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  docker:
    name: Check for New Releases of Docker Engine
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    env:
      HAVE_ACCESS: ${{ secrets.DOCKERHUB_USERNAME != '' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # Detect Official latest non-prerelease version of the Docker engine
      # (as a pure SemVer).
      - name: Docker Release Version
        id: version
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: moby/moby
          excludes: prerelease, draft
      - name: Docker SemVer
        id: semver
        shell: bash
        run: |
          DOCKER_VERSION=${{ steps.version.outputs.release }}
          echo 'DOCKER_VERSION='${DOCKER_VERSION#v*} >> $GITHUB_ENV
          echo "::set-output name=version::${DOCKER_VERSION#v*}"

      # Publish containers to the GHCR tagged with the latest version of the
      # Docker engine, if they do not already exist.
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Images Presence
        shell: bash
        id: ghcr
        run: |
          if docker image pull -q ghcr.io/${{ github.repository }}/ubuntu-dind:${{ env.DOCKER_VERSION }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to GHCR
        if: steps.ghcr.outputs.present == 'false'
        uses: ./.github/actions/docker
        with:
          registry: ghcr.io/${{ github.repository }}
          version: ${{ env.DOCKER_VERSION }}

      # Publish containers to the DockerHub tagged with the latest version of
      # the Docker engine and of the action runner. This only happens if a
      # DOCKERHUB_USERNAME is set.
      - name: Login to DockerHub
        if: env.HAVE_ACCESS == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check Images Presence
        if: env.HAVE_ACCESS == 'true'
        shell: bash
        id: dockerhub
        run: |
          if docker image pull -q ${{ github.repository_owner }}/ubuntu-dind:${{ env.DOCKER_VERSION }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to DockerHub
        if: env.HAVE_ACCESS == 'true' && steps.dockerhub.outputs.present == 'false'
        uses: ./.github/actions/docker
        with:
          registry: ${{ github.repository_owner }}
          version: ${{ env.DOCKER_VERSION }}

  runner:
    name: Check for New Releases of GH Actions Runner
    needs: docker
    runs-on: ubuntu-latest
    env:
      HAVE_ACCESS: ${{ secrets.DOCKERHUB_USERNAME != '' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # Detect Official latest non-prerelease version of the GH actions runner
      # (as a pure SemVer).
      - name: Runner Release Version
        id: runner
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: actions/runner
          excludes: prerelease, draft
      - name: Runner SemVer
        id: semver
        shell: bash
        run: |
          GH_RUNNER_VERSION=${{ steps.runner.outputs.release }}
          echo 'GH_RUNNER_VERSION='${GH_RUNNER_VERSION#v*} >> $GITHUB_ENV
          echo "::set-output name=version::${GH_RUNNER_VERSION#v*}"

      # Detect our own latest release. This might fail if there are no release
      # yet, but we'll continue anyway as this is a corner case.
      - name: Own Release Version
        id: own
        continue-on-error: true
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft

      # Now, all steps below will be executed only if our latest release is
      # different from the official GH action runner release. Meaning, a new
      # release was made for the official runner and we still haven't made one.

      # Publish containers to the GHCR tagged with the latest version of the
      # Docker engine and of the action runner.
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Image to GHCR
        if: steps.semver.outputs.version != steps.own.outputs.release
        uses: ./.github/actions/runner
        with:
          registry: ghcr.io/${{ github.repository }}
          docker: ${{ needs.docker.outputs.version }}
          runner: ${{ env.GH_RUNNER_VERSION }}
          latest: "true"

      # Publish containers to the DockerHub tagged with the latest version of
      # the Docker engine and of the action runner. This only happens if a
      # DOCKERHUB_USERNAME is set.
      - name: Login to DockerHub
        if: env.HAVE_ACCESS == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Images to DockerHub
        if: env.HAVE_ACCESS == 'true' && steps.semver.outputs.version != steps.own.outputs.release
        uses: ./.github/actions/runner
        with:
          registry: ${{ github.repository_owner }}
          docker: ${{ needs.docker.outputs.version }}
          runner: ${{ env.GH_RUNNER_VERSION }}
          latest: "true"

      # Create a release at GitHub, this arranges for the comparison step to
      # work next time. Release is created last, so it acts as a marker that
      # Docker image publication steps have succeeded. Release name contains
      # leading `v`, release tag **without** the leading `v`.
      - name: Create Release
        if: steps.semver.outputs.version != steps.own.outputs.release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.GH_RUNNER_VERSION }}
          name: ${{ steps.semver.outputs.version }}
          body: |
            Automatic release to match new GH Actions runner [release](https://github.com/actions/runner/releases/tag/v${{ env.GH_RUNNER_VERSION }}).
            See all versions and pull instructions [here](https://github.com/${{ github.repository }}/pkgs/container/github-actions-runner-rootless%2Fgithub-actions-runner)
          draft: false
          prerelease: false
