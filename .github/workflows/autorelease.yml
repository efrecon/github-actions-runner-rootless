name: Follow GH Runner Release Pace
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      HAVE_ACCESS: ${{ secrets.DOCKERHUB_USERNAME != '' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # Detect Official latest non-prerelease version of the GH actions runner
      # (as a pure SemVer).
      - name: Runner Release Version
        id: runner
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: actions/runner
          excludes: prerelease, draft
      - name: Runner SemVer
        id: semver
        shell: bash
        run: |
          GH_RUNNER_VERSION=${{ steps.runner.outputs.release }}
          echo 'GH_RUNNER_VERSION='${GH_RUNNER_VERSION#v*} >> $GITHUB_ENV

      # Detect Official latest non-prerelease version of the GH actions runner
      # (as a pure SemVer).
      - name: Docker Release Version
        id: docker
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: moby/mody
          excludes: prerelease, draft
      - name: Docker SemVer
        id: semver
        shell: bash
        run: |
          DOCKER_VERSION=${{ steps.docker.outputs.release }}
          echo 'DOCKER_VERSION='${DOCKER_VERSION#v*} >> $GITHUB_ENV

      # Detect our own latest release. This might fail if there are no release
      # yet, but we'll continue anyway as this is a corner case.
      - name: Own Release Version
        id: own
        continue-on-error: true
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft

      # Now, all steps below will be executed only if our latest release is
      # different from the official GH action runner release. Meaning, a new
      # release was made for the official runner and we still haven't made one.

      # Publish containers to the GHCR tagged with the latest version of the
      # Docker engine and of the action runner.
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Images to GHCR
        if: steps.runner.outputs.release != steps.own.outputs.release
        uses: ./.github/actions/publish@main
        with:
          registry: docker.pkg.github.com/${{ github.repository }}
          docker: ${{ env.DOCKER_VERSION }}
          runner: ${{ env.GH_RUNNER_VERSION }}

      # Publish containers to the DockerHub tagged with the latest version of
      # the Docker engine and of the action runner. This only happens if a
      # DOCKERHUB_USERNAME is set.
      - name: Login to DockerHub
        if: env.HAVE_ACCESS == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Images to DockerHub
        if: env.HAVE_ACCESS == 'true' && steps.runner.outputs.release != steps.own.outputs.release
        uses: ./.github/actions/publish@main
        with:
          registry: ${{ github.repository_owner }}
          docker: ${{ env.DOCKER_VERSION }}
          runner: ${{ env.GH_RUNNER_VERSION }}

      # Create a release at GitHub, this arranges for the comparison step to
      # work next time. Release is created last, so it acts as a marker that all
      # Docker image publication steps have succeeded.
      - name: Create Release
        if: steps.runner.outputs.release != steps.own.outputs.release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.GH_RUNNER_VERSION }}
          name: ${{ steps.runner.outputs.release }}
          body: |
            Automatic release to match new GH Actions runner
            [release](https://github.com/actions/runner/releases/tag/v${{ env.GH_RUNNER_VERSION }})
          draft: false
          prerelease: false
