name: Follow Upstream Releases
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  docker:
    name: Docker (moby)
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    env:
      HAVE_ACCESS: ${{ secrets.DOCKERHUB_USERNAME != '' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Release Version
        id: semver
        uses: ./.github/actions/version
        with:
          project: moby/moby

      # Publish containers to the GHCR tagged with the latest version, if they
      # do not already exist.
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Images Presence
        shell: bash
        id: ghcr
        run: |
          if docker image pull -q ghcr.io/${{ github.repository }}/ubuntu-dind:${{ steps.semver.outputs.version }}-${{ github.sha }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to GHCR
        if: steps.ghcr.outputs.present == 'false'
        uses: ./.github/actions/docker
        with:
          registry: ghcr.io/${{ github.repository }}
          version: ${{ steps.semver.outputs.version }}

      # Publish containers to the DockerHub tagged with the latest version. This
      # only happens if a DOCKERHUB_USERNAME is set.
      - name: Login to DockerHub
        if: env.HAVE_ACCESS == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check Images Presence
        if: env.HAVE_ACCESS == 'true'
        shell: bash
        id: dockerhub
        run: |
          if docker image pull -q ${{ github.repository_owner }}/ubuntu-dind:${{ steps.semver.outputs.version }}-${{ github.sha }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to DockerHub
        if: env.HAVE_ACCESS == 'true' && steps.dockerhub.outputs.present == 'false'
        uses: ./.github/actions/docker
        with:
          registry: ${{ github.repository_owner }}
          version: ${{ steps.semver.outputs.version }}


  git:
    name: git
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    env:
      HAVE_ACCESS: ${{ secrets.DOCKERHUB_USERNAME != '' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Release Version
        id: semver
        uses: ./.github/actions/version
        with:
          project: git/git

      # Publish containers to the GHCR tagged with the latest version, if they
      # do not already exist.
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Images Presence
        shell: bash
        id: ghcr
        run: |
          if docker image pull -q ghcr.io/${{ github.repository }}/ubuntu-git:${{ steps.semver.outputs.version }}-${{ github.sha }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to GHCR
        if: steps.ghcr.outputs.present == 'false'
        uses: ./.github/actions/git
        with:
          registry: ghcr.io/${{ github.repository }}
          version: ${{ steps.semver.outputs.version }}

      # Publish containers to the DockerHub tagged with the latest version. This
      # only happens if a DOCKERHUB_USERNAME is set.
      - name: Login to DockerHub
        if: env.HAVE_ACCESS == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check Images Presence
        if: env.HAVE_ACCESS == 'true'
        shell: bash
        id: dockerhub
        run: |
          if docker image pull -q ${{ github.repository_owner }}/ubuntu-git:${{ steps.semver.outputs.version }}-${{ github.sha }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to DockerHub
        if: env.HAVE_ACCESS == 'true' && steps.dockerhub.outputs.present == 'false'
        uses: ./.github/actions/git
        with:
          registry: ${{ github.repository_owner }}
          version: ${{ steps.semver.outputs.version }}

  runner:
    name: GH Actions Runner
    needs:
      - docker
      - git
    runs-on: ubuntu-latest
    env:
      HAVE_ACCESS: ${{ secrets.DOCKERHUB_USERNAME != '' }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # Detect Official latest non-prerelease version of the GH actions runner
      # (as a pure SemVer).
      - name: Runner SemVer
        id: semver
        uses: ./.github/actions/version
        with:
          project: actions/runner

      # Detect our own latest release. This might fail if there are no release
      # yet, but we'll continue anyway as this is a corner case.
      - name: Own Release Version
        id: own
        continue-on-error: true
        uses: ./.github/actions/version
        with:
          project: ${{ github.repository }}

      # Now, all steps below will be executed only if our latest release is
      # different from the official GH action runner release. Meaning, a new
      # release was made for the official runner and we still haven't made one.

      # Publish containers to the GHCR tagged with the latest version of the
      # Docker engine and of the action runner.
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check Images Presence
        shell: bash
        id: ghcr
        run: |
          if docker image pull -q ghcr.io/${{ github.repository }}/github-actions-runner:${{ steps.semver.outputs.version }}-${{ github.sha }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Image to GHCR
        if: steps.ghcr.outputs.present == 'false'
        uses: ./.github/actions/runner
        with:
          registry: ghcr.io/${{ github.repository }}
          docker: ${{ needs.docker.outputs.version }}
          git: ${{ needs.git.outputs.version }}
          runner: ${{ steps.semver.outputs.version }}
          latest: "true"

      # Publish containers to the DockerHub tagged with the latest version of
      # the Docker engine and of the action runner. This only happens if a
      # DOCKERHUB_USERNAME is set.
      - name: Login to DockerHub
        if: env.HAVE_ACCESS == 'true'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Check Images Presence
        if: env.HAVE_ACCESS == 'true'
        shell: bash
        id: dockerhub
        run: |
          if docker image pull -q ${{ github.repository_owner }}/github-actions-runner:${{ steps.semver.outputs.version }}-${{ github.sha }}; then
            echo "::set-output name=present::true"
          else
            echo "::set-output name=present::false"
          fi
      - name: Publish Images to DockerHub
        if: env.HAVE_ACCESS == 'true' && steps.dockerhub.outputs.present == 'false'
        uses: ./.github/actions/runner
        with:
          registry: ${{ github.repository_owner }}
          docker: ${{ needs.docker.outputs.version }}
          git: ${{ needs.git.outputs.version }}
          runner: ${{ steps.semver.outputs.version }}
          latest: "true"

      # Create a release at GitHub, this arranges for the comparison step to
      # work next time. Release is created last, so it acts as a marker that
      # Docker image publication steps have succeeded. Release name contains
      # leading `v`, release tag **without** the leading `v`.
      - name: Create Release
        if: steps.semver.outputs.version != steps.own.outputs.version
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.GH_RUNNER_VERSION }}
          name: ${{ steps.semver.outputs.version }}
          body: |
            Automatic release to match new GH Actions runner [release](https://github.com/actions/runner/releases/tag/v${{ env.GH_RUNNER_VERSION }}).
            See all versions and pull instructions [here](https://github.com/${{ github.repository }}/pkgs/container/github-actions-runner-rootless%2Fgithub-actions-runner)
          draft: false
          prerelease: false
